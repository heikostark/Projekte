{ *************************************** New ******************************** }

_page ('Polynom ');
_vbox;
_expand;
      _hbox;
            input_polynom_method := _combobox;
                                    _item ('Degree zero');
                                    _item ('Degree one');
                                    _item ('Degree two');
                                    _item ('Degree three');
                                    _item ('Degree four');
                                    _item ('Degree five');
                                    _item ('Degree six');
                                    _item ('Degree seven');
                                    _item ('Degree eigth');
                                    _item ('Degree nine');
{                                    _item ('Fit');  stupid}
            _endcombobox (9);
            _button (@xpm_left,@m3ll,@macro_self);
            _button (@xpm_leftleft,@m3lll,@macro_self);
            _button (@xpm_leftstop,@m3lls,@macro_self);
            label_polynom_status := _label;
            _button (@xpm_rightstop,@m3lrs,@macro_self);
            _button (@xpm_rightright,@m3lrr,@macro_self);
            _button (@xpm_right,@m3lr,@macro_self);
      _endbox;
      _separator;
      _hbox;
            _label ('  c:'); polynom[0] := _edit (' ');
            _label ('  x:'); polynom[1] := _edit (' ');
      _endbox;
      _hbox;
            _label ('x^2:'); polynom[2] := _edit (' ');
            _label ('x^3:'); polynom[3] := _edit (' ');
      _endbox;
      _hbox;
            _label ('x^4:'); polynom[4] := _edit (' ');
            _label ('x^5:'); polynom[5] := _edit (' ');
      _endbox;
      _hbox;
            _label ('x^6:'); polynom[6] := _edit (' ');
            _label ('x^7:'); polynom[7] := _edit (' ');
      _endbox;
      _hbox;
            _label ('x^8:'); polynom[8] := _edit (' ');
            _label ('x^9:'); polynom[9] := _edit (' ');
      _endbox;
      _separator;
      _hbox;
            _label ('Begin:'); polynom_begin := _smalledit (' ');
            _label ('Steps:'); polynom_step := _smalledit (' ');
            _label ('End:'); polynom_end := _smalledit (' ');
      _endbox;
      _hbox;
            _label;
            command ('Change','formula.polynom.change','','','Change line or curve',@l_polynom_change);
            command ('Make a new','formula.polynom','','','Make a new line or curve',@l_polynom_new);
            _label;
      _endbox;
_endbox;
_endpage;

_page ('1D ');
_vbox;
_expand;
      _hbox;
            _label ('X: Begin:'); formula_xbegin := _smalledit ('0');
            _label ('Steps:'); formula_xstep := _smalledit ('0.1');
            _label ('End:'); formula_xend := _smalledit (getstring(2*pi,3));
      _endbox;
      _hbox;
            _label ('Origin:'); formula_point := _edit ('<0, 0, 0>');
            _tooltip (_label ('Normal:'),'With line is the normal vector the line direction vector'); formula_normal := _edit ('<0, 0, 1>');
      _endbox;
      _separator;
      _hbox;
            _shrink;
            _label ('<b>Vector:</b>');
            _expand;
            command ('Vector','formula.vector','','','Make a new vector (origin –≻ normal)',@proc_vector);
            command ('Norm','formula.norm','','','Make a new normed vector (origin –≻ normal)',@proc_norm);
            _label ('<b>Line:</b>');
            command ('Line','formula.line','','','Make a new line',@proc_newline);
      _endbox;
      _separator;
      _hbox;
            _label ('Radius:'); formula_radius := _smalledit ('1');
            _label ('Pitch:'); formula_pitch := _smalledit ('1');
      _endbox;
      _hbox;
            _shrink;
            _label ('<b>Circular:</b>');
            _expand;
            command ('Circle','formula.circle','','','Make a new circle',@l_formula_circle);
            command ('R-helix','formula.helix.right','','','Make a new r-helix',@l_formula_rhelix);
            command ('L-helix','formula.helix.left','','','Make a new l-helix',@l_formula_lhelix);
            command ('Inv r-helix','formula.inverse.helix.right','','','Make a new inverse r-helix',@l_formula_invrhelix);
            command ('Inv l-helix','formula.inverse.helix.left','','','Make a new inverse l-helix',@l_formula_invlhelix);
      _endbox;
_endbox;
_endpage;

_page ('2D ');
_vbox;
_expand;
      _hbox;
            _label ('X: Begin:'); formula2_xbegin := _smalledit ('-10');
            _label ('Steps:'); formula2_xstep := _smalledit ('1');
            _label ('End:'); formula2_xend := _smalledit ('10');
      _endbox;
      _hbox;
            _label ('Y: Begin:'); formula2_ybegin := _smalledit ('-10');
            _label ('Steps:'); formula2_ystep := _smalledit ('1');
            _label ('End:'); formula2_yend := _smalledit ('10');
      _endbox;
      _separator;
      _hbox;
            _label ('Origin:'); formula2_point := _edit ('<0, 0, 0>');
            _tooltip (_label ('Normal:'),'With line is the normal vector the line direction vector'); formula2_normal := _edit ('<0, 0, 1>');
      _endbox;
      _hbox;
            _shrink;
            _label ('<b>Plane:</b>');
            _expand;
            command ('Points','formula.point.plane','','','Make a new plane with points',@l_formula_point_plane);
            command ('Triangles','formula.triangle.plane','','','Make a new plane with triangles',@l_formula_triangle_plane);
            command ('Squares','formula.square.plane','','','Make a new plane with squares',@l_formula_square_plane);
            command ('Sown','formula.sown.plane','','','Sown a new plane with objects from source to destination',@l_formula_sown_plane);
      _endbox;
      _hbox;
            _shrink;
            _label ('<b>Random plane:</b>');
            _expand;
            command ('Points','formula.random.point.plane','','','Make a new random plane with points',@l_formula_random_point_plane);
            command ('Triangles','formula.random.triangle.plane','','','Make a new random plane with triangles',@l_formula_random_triangle_plane);
            command ('Squares','formula.random.square.plane','','','Make a new random plane with squares',@l_formula_random_square_plane);
            command ('Sown','formula.random.sown.plane','','','Sown a new random plane with objects from source to destination',@l_formula_random_sown_plane);
      _endbox;
_endbox;
_endpage;

_page ('3D ');
_vbox;
_expand;
      _hbox;
            _label ('X: Begin:'); formula3_xbegin := _smalledit ('-10');
            _label ('Steps:'); formula3_xstep := _smalledit ('1');
            _label ('End:'); formula3_xend := _smalledit ('10');
      _endbox;
      _hbox;
            _label ('Y: Begin:'); formula3_ybegin := _smalledit ('-10');
            _label ('Steps:'); formula3_ystep := _smalledit ('1');
            _label ('End:'); formula3_yend := _smalledit ('10');
      _endbox;
      _hbox;
            _label ('Z: Begin:'); formula3_zbegin := _smalledit ('-10');
            _label ('Steps:'); formula3_zstep := _smalledit ('1');
            _label ('End:'); formula3_zend := _smalledit ('10');
      _endbox;
      _separator;
      _hbox;
            _label ('<b>Spheroid:</b>');
            command ('Points','formula.point.sphere','','','Make a new sphere/spheroid with points (<i>Note: radius = max dim</i>)',@l_formula_point_spheroid);
            _label ('<b>Ellipsoid:</b>');
            command ('Points','formula.point.ellipsoid','','','Make a new ellipsoid with points',@l_formula_point_ellipsoid);
      _endbox;
      _separator;
      _hbox;
            _label ('Vector:'); formula3_vector := _edit ('<1, 1, 1>');
            _label ('|');
            togglerandomvector3 := _uncheckbutton ('Random vector');
      _endbox;
      _hbox;
            _shrink;
            _label ('<b>Field:</b>');
            _expand;
            command ('Points','formula.point.field','','','Make a new field with points',@l_formula_point_field);
            command ('Vectors','formula.vector.field','','','Make a new field with vectors',@l_formula_vector_field);
            command ('Normals','formula.normal.field','','','Make a new field with normals',@l_formula_normal_field);
            command ('Sown','formula.sown.field','','','Sown a new field with objects from source to destination',@l_formula_sown_field);
      _endbox;
      _hbox;
            _shrink;
            _label ('<b>Random field:</b>');
            _expand;
            command ('Points','formula.random.point.field','','','Make a new random field with points',@l_formula_random_point_field);
            command ('Vectors','formula.random.vector.field','','','Make a new random field with vectors',@l_formula_random_vector_field);
            command ('Normals','formula.random.normal.field','','','Make a new random field with normals',@l_formula_random_normal_field);
            command ('Sown','formula.random.sown.field','','','Sown a new random field with objects from source to destination',@l_formula_random_sown_field);
      _endbox;
_endbox;
_endpage;

_page ('4D ');
_vbox;
_expand;
      _hbox;
            _label ('X: Begin:'); formula4_xbegin := _smalledit ('-10');
            _label ('Steps:'); formula4_xstep := _smalledit ('1');
            _label ('End:'); formula4_xend := _smalledit ('10');
      _endbox;
      _hbox;
            _label ('Y: Begin:'); formula4_ybegin := _smalledit ('-10');
            _label ('Steps:'); formula4_ystep := _smalledit ('1');
            _label ('End:'); formula4_yend := _smalledit ('10');
      _endbox;
      _hbox;
            _label ('Z: Begin:'); formula4_zbegin := _smalledit ('-10');
            _label ('Steps:'); formula4_zstep := _smalledit ('1');
            _label ('End:'); formula4_zend := _smalledit ('10');
      _endbox;
      _hbox;
            _label ('T: Begin:'); formula4_tbegin := _smalledit ('-10');
            _label ('Steps:'); formula4_tstep := _smalledit ('1');
            _label ('End:'); formula4_tend := _smalledit ('10');
      _endbox;
      _separator;
      _hbox;
            _label ('Vector:'); formula4_vector := _edit ('<1, 1, 1, 1>');
            _label ('|');
            togglerandomvector4 := _uncheckbutton ('Random vector');
      _endbox;
      _hbox;
            _shrink;
            _label ('<b>Hyper field:</b>');
            _expand;
            command ('Points','formula.point.hyperfield','','','Make a new hyper field with points',@l_formula_point_hyperfield);
            command ('Vectors','formula.vector.hyperfield','','','Make a new hyper field with vectors',@l_formula_vector_hyperfield);
            command ('Normals','formula.normal.hyperfield','','','Make a new hyper field with normals',@l_formula_normal_hyperfield);
            command ('Sown','formula.sown.hyperfield','','','Sown a new hyper field with objects from source to destination',@l_formula_sown_hyperfield);
      _endbox;
      _hbox;
            _shrink;
            _label ('<b>Random hyper field:</b>');
            _expand;
            command ('Points','formula.random.point.hyperfield','','','Make a new random hyper field with points',@l_formula_random_point_hyperfield);
            command ('Vectors','formula.random.vector.hyperfield','','','Make a new random hyper field with vectors',@l_formula_random_vector_hyperfield);
            command ('Normals','formula.random.normal.hyperfield','','','Make a new random hyper field with normals',@l_formula_random_normal_hyperfield);
            command ('Sown','formula.random.sown.hyperfield','','','Sown a new random hyper field with objects from source to destination',@l_formula_random_sown_hyperfield);
      _endbox;
_endbox;
_endpage;

{
_page ('Mesh ');
_vbox;
_expand;

_endbox;
_endpage;

_page ('FEM ');
_vbox;
_expand;

_endbox;
_endpage;
}
