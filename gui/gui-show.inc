{ ************************************* Show ********************************* }

_page ('Info ');
_eventbox;
_backcolor ($FFFF,$FFFF,$BFFF);
      _vbox;
            _label ('<b>Bold</b> - Single selection - LMB');
            _label ('<span foreground="#FF8000">Color</span> - Multiple selection - RMB');
            _separator;
            _label ('<b>Source</b>');
            _label ('All operations work on multiple selected sources.');
            _label;
            _label ('<b>Destination</b>');
            _label ('Only geometry along axes have a single selected destination.');
            _separator;
            _label ('<i>Note: Only multiple selection of destinations have a focus.</i>');
            if table_long then _label ('<i>Control + Click on screen (xy and zt) to take a screenshot.</i>')
            else if table_wide then _label ('<i>Control + Click on screen (xy and zt) to take a screenshot.</i>')
            else if table_special then _label ('<i>Control + Click on screen (xy, xz, xt) to take a screenshot.</i>')
            else _label ('<i>Control + Click on screen (xy, xz, yz) to take a screenshot.</i>');
      _endbox;
_endbox;
_endpage;

_page ('Geometry ');
_vbox;
_expand;
      _hbox;
            _label;
            togglegrouped := _uncheckbutton ('Grouped data (Histogram)'); { !!!!! checkbutton !!!!! }
            _label ('| –≻ Graph –≻ Report');
            _label;
      _endbox;
      _hbox;
            _label ('Groups:'); geometry_groups := _smalledit ('10');
            _label;
            togglelog := _uncheckbutton ('Log scale');
      _endbox;
      _separator;
      _hbox;
            _shrink;
            _label ('<b>Points:</b>');
            _expand;
            command ('Zero distances','','','','Show statistic to distances (points-zero)',@proc_show_pzerodistance);
            command ('Min distances','','','','Show statistic to min neighbor distances (points)',@proc_show_pmindistance);
            command ('Max distances','','','','Show statistic to max neighbor distances (points)',@proc_show_pmaxdistance);
      _endbox;
      _hbox;
            _shrink;
            _label ('<b>Lines 3D:</b>');
            _expand;
            command ('Tortuosity','','','','Show statistic to lines tortuosity (3D curve / line)',@proc_show_ltortuosity_3d);
            command ('Sub lengths','','','','Show statistic to lines sub length (3D)',@proc_show_lsublength_3d);
            command ('Lengths','','','','Show statistic to lines length (3D)',@proc_show_llength_3d);
      _endbox;
      _hbox;
            _shrink;
            _label ('<b>Lines:</b>');
            _expand;
            command ('Min distances','','','','Show statistic to min neighbor distances (4D lines)',@proc_show_lmindistance);
            command ('Max distances','','','','Show statistic to max neighbor distances (4D lines)',@proc_show_lmaxdistance);
            command ('Points','','','','Show statistic to number of points/lines',@proc_show_lpoints);
            command ('Sub lengths','','','','Show statistic to lines sub length (4D)',@proc_show_lsublength);
            command ('Lengths','','','','Show statistic to lines length (4D)',@proc_show_llength);
      _endbox;
      _separator;
      _hbox;
            command ('X values','','','','Show statistic for x-axis values',@proc_show_x_values);
            command ('Y values','','','','Show statistic for y-axis values',@proc_show_y_values);
            command ('Z values','','','','Show statistic for z-axis values',@proc_show_z_values);
            command ('T values','','','','Show statistic for t-axis values',@proc_show_t_values);
            command ('Material','','','','Show statistic for material values',@proc_show_material_values);
      _endbox;
      _separator;
      _hbox;
            _shrink;
            _tooltip (_label ('<b>Polygone area:</b>'),'Show polygone (all types) areas along axes');
            _expand;
            command ('Along x','','','','Show polygone areas along x-axis',@proc_show_areax);
            command ('Along y','','','','Show polygone areas along y-axis',@proc_show_areay);
            command ('Along z','','','','Show polygone areas along z-axis',@proc_show_areaz);
      _endbox;
      _separator;
      _hbox;
            _shrink;
            _tooltip (_label ('<b>Polyeder volume:</b>'),'Show polyeder (hexaeder, pentaeder, tetraeder) volumes along axes');
            _expand;
            command ('Along x','','','','Show polyeder volumes along x-axis',@proc_show_volumex);
            command ('Along y','','','','Show polyeder volumes along y-axis',@proc_show_volumey);
            command ('Along z','','','','Show polyeder volumes along z-axis',@proc_show_volumez);
      _endbox;
_endbox;
_endpage;

_page ('Graph ');
      _framebox;
                _eventbox;
                          _cursor_pressed (@screen_histo_pressed,@macro_self);
                          area_shot := _canvas;
                          _exposed (area_shot,@Exposed_histo,@macro_self);
                _endbox;
      _endbox;
_endpage;

_page ('Report ');
      _hbox;
      _shrink;
           _vbox;
                 command ('R','clipboard.stat.red','','','Copy red raw data to the system clipboard',@proc_clipboard_red);
                 command ('G','clipboard.stat.green','','','Copy green raw data to the system clipboard',@proc_clipboard_green);
                 command ('B','clipboard.stat.blue','','','Copy blue raw data to the system clipboard',@proc_clipboard_blue);
                 command ('Y','clipboard.stat.yellow','','','Copy yellow raw data to the system clipboard',@proc_clipboard_yellow);
                 command ('C','clipboard.stat.cyan','','','Copy cyan raw data to the system clipboard',@proc_clipboard_cyan);
                 command ('P','clipboard.stat.purple','','','Copy purple raw data to the system clipboard',@proc_clipboard_purple);
                 _separator;
                 hidecommand ('I','clipboard.stat.image','','','Copy graph to the system clipboard (direct saving via on graph mouse click)',@proc_clipboard_image);
                 command ('R','clipboard.stat.report','','','Copy report to the system clipboard',@proc_clipboard_report);
           _endbox;
      _fill;
           _hbox;
           _fill;
                 _scrollbox;
                            _text (text_report);
                 _endbox;
           _endbox;
      _endbox;
_endpage;

_page ('Povray ');
_vbox;
_expand;
      _hbox;
            _label ('Sphere grouping:');
            show_povray_group := _combobox;
                              _item ('union');
                              _item ('merge (transparent)'); { like union for transparent material}
                              _item ('difference');
                              _item ('intersection');
                              { special: inverse }
                              { special: clipped_by }
                              _item ('blob');
            _endcombobox (0);
            _tooltip (_label ('Threshold:'),'Blob threshold'); show_povray_threshold := _smalledit ('1');
      _endbox;
      _separator;
      _hbox;
            command ('Spheres','','','','Write only spheres (all points) after layer color and size to inc-file',@proc_show_spheres);
            command ('Spheres (material)','','','','Write only t sized spheres (all points) after material color ($HHHHHH) to inc-file',@proc_show_spheres_mat);
            command ('Spheres (object name)','','','','Write only t sized spheres (all points) after object name color (contains somewhere $HHHHHH) to inc-file',@proc_show_spheres_obj);
      _endbox;
      _hbox;
            command ('T spheres','','','','Write only t sized spheres (all points) after layer color to inc-file',@proc_show_spheres_t);
            command ('Z spheres','','','','Write only z sized spheres (all points) after layer color to inc-file',@proc_show_spheres_z);
            command ('Y spheres','','','','Write only y sized spheres (all points) after layer color to inc-file',@proc_show_spheres_y);
            command ('X spheres','','','','Write only x sized spheres (all points) after layer color to inc-file',@proc_show_spheres_x);
      _endbox;
      _separator;
      _hbox;
            command ('Colored','','','','Write only colored cmap(t.min,t.max) spheres (all points) and layer size to inc-file',@proc_show_color_spheres);
            command ('Sized','','','','Write only sized smap(t.min,t.max) spheres (all points) and layer color to inc-file',@proc_show_size_spheres);
            command ('Both','','','','Write only colored cmap(t.min,t.max) and sized smap(t.min,t.max) spheres (all points) to inc-file',@proc_show_both_spheres);
            _tooltip (_label ('Map steps:'),'Steps of color and size maps (1..9999)'); show_povray_steps := _smalledit ('1000');
      _endbox;
      _hbox;
            command ('T spheres','','','','Write only colored cmap(t.min,t.max) and sized (t) spheres (all points) to inc-file',@proc_show_color_spheres_t);
            command ('Z spheres','','','','Write only colored cmap(z.min,z.max) and sized (z) spheres (all points) to inc-file',@proc_show_color_spheres_z);
            command ('Y spheres','','','','Write only colored cmap(y.min,y.max) and sized (y) spheres (all points) to inc-file',@proc_show_color_spheres_y);
            command ('X spheres','','','','Write only colored cmap(x.min,x.max) and sized (x) spheres (all points) to inc-file',@proc_show_color_spheres_x);
      _endbox;
_endbox;
_endpage;

_page ('P≻ ','Povray...');
_vbox;
_expand;
      _hbox;
            command ('Write lines','','','','Write only spheres and lines (ignore vectors) to inc-file',@proc_show_lines);
            command ('Write vectors','','','','Write only spheres and vectors (split lines) to inc-file',@proc_show_vectors);
            command ('Write arrows','','','','Write only spheres and arrows (split lines) to inc-file',@proc_show_arrows);
            command ('Write mesh','','','','Write only spheres and meshes (ignore lines) to inc-file',@proc_show_meshes);
      _endbox;
      _hbox;
            command ('Colored lines','','','','Write only colored cmap(t.min,t.max) lines and layer size to inc-file',@proc_show_color_lines);
            command ('Sized lines','','','','Write only sized smap(t.min,t.max) lines and layer color to inc-file',@proc_show_size_lines);
            command ('Both lines','','','','Write only colored cmap(t.min,t.max) and sized smap(t.min,t.max) lines to inc-file',@proc_show_both_lines);
            _tooltip (_label ('Steps:'),'Steps of cmap (1..9999)'); show_povray_steps2 := _smalledit ('1000');
      _endbox;
      _separator;
      _hbox;
            command ('Set c','','','','Set range for curvature',@proc_show_set_curvature);
            command ('Set t','','','','Set range for torsion',@proc_show_set_torsion);
            _tooltip (_label ('Resolution:'),'Resolution of curves'); show_povray_resolution := _smalledit ('100');
            _tooltip (_label ('Range:'),'Range of the Frenet-Serret formulas'); show_povray_range := _edit ('[0:2]');

      _endbox;
      _hbox;
            _label;
            _label ('Polynom: ');
            show_polynom_method := _combobox;
                                    _item ('Degree  0');
                                    _item ('Degree  1');
                                    _item ('Degree  2');
                                    _item ('Degree  3');
                                    _item ('Degree  4');
                                    _item ('Degree  5');
                                    _item ('Degree  6');
                                    _item ('Degree  7');
                                    _item ('Degree  8');
                                    _item ('Degree  9');
                                    _item ('Degree 10');
                                    _item ('Degree 11');
                                    _item ('Degree 12');
                                    _item ('Degree 13');
                                    _item ('Degree 14');
                                    _item ('Degree 15');
                                    _item ('Degree 16');
                                    _item ('Degree 17');
                                    _item ('Degree 18');
                                    _item ('Degree 19');
            _endcombobox (19);
            _label;
      _endbox;
      _hbox;
            command ('Curves','','','','Write only spheres and curves (ignore vectors) to inc-file',@proc_show_curves);
            command ('C.. fit','','','','Write only spheres and curves (ignore vectors and with polynom fit) to inc-file',@proc_show_curves_fit);
            command ('Curvature','','','','Write colored curves after curvature with cmap to inc-file',@proc_show_curvature);
            command ('C.. fit','','','','Write colored curves (with polynom fit) after curvature with cmap to inc-file',@proc_show_curvature_fit);
            command ('Torsion','','','','Write colored curves after torsion with cmap to inc-file'+#10+'<i>Note: the line starts in a plane and torsion is the value of the line which going out of plane!</i>',@proc_show_torsion);
            command ('T.. fit','','','','Write colored curves (with polynom fit) after torsion with cmap to inc-file'+#10+'<i>Note: the line starts in a plane and torsion is the value of the line which going out of plane!</i>',@proc_show_torsion_fit);
      _endbox;
      _separator;
      _hbox;
            _label;
            _tooltip (_label ('Nummer of objects:'),'Number of objects (1...)'); show_povray_objects := _smalledit ('10');
            _label;
      _endbox;
      _hbox;
            _shrink;
            _label ('<b>Write objects:</b>');
            _expand;
            command ('rotated','show.write.objects','','','Write count objects after vectorfield (origin=origin and direction=rotation) to inc-file',@proc_show_write_objects);
            command ('flipped','show.write.flip.objects','','','Write count objects after vectorfield (origin=origin, direction=rotation and random=scale(-1 or 1)) to inc-file',@proc_show_write_objects_flip);
            command ('scaled','show.write.scale.objects','','','Write count objects after vectorfield (origin=origin, direction=rotation and length=scale) to inc-file',@proc_show_write_objects_scale);
      _endbox;
_endbox;
_endpage;

_page ('PC ','Povray color option');
_vbox;
_expand;
      _hbox;
            _vbox;
                  _hbox;
                        command ('Default','','','','Set colors to default values',@proc_show_povray_default);
                        command ('Light','','','','Set colors to light values',@proc_show_povray_light);
                        command ('Dark','','','','Set colors to dark values',@proc_show_povray_dark);
                  _endbox;
                  _hbox;
                        command ('25 %','','','','Set alpha values at 25%',@proc_show_povray_quarter);
                        command ('50 %','','','','Set alpha values at 50%',@proc_show_povray_half);
                        command ('75 %','','','','Set alpha values at 50%',@proc_show_povray_half_quarter);
                        command ('100 %','','','','Set alpha values at 100%',@proc_show_povray_full);
                  _endbox;
            _endbox;
            _label ('|');
            _vbox;
                  _hbox;
                        command ('RGB map','','','','Set color map to rgb values',@proc_show_povray_rgb);
                        command ('Rainbow map','','','','Set color map to rainbow values',@proc_show_povray_rainbow);
                  _endbox;
                  _hbox;
                        command ('Curvature map','','','','Set color map to curvature values',@proc_show_povray_curvature_color);
                        command ('Torsion map','','','','Set color map to torsion values',@proc_show_povray_torsion_color);
                  _endbox;
            _endbox;
      _endbox;
      _separator;
      _hbox;
            _label ('Red layer:'); editred := _colort ($FFFF, 0, 0, $FFFF);
            _label ('Map:'); editredmap := _smalledit ('0');
            _label ('Radius:'); editredradius := _smalledit ('0.1');
      _endbox;
      _hbox;
            _label ('Green layer:'); editgreen := _colort (0, $FFFF, 0, $FFFF);
            _label ('Map:'); editgreenmap := _smalledit ('0.5');
            _label ('Radius:'); editgreenradius := _smalledit ('0.1');
      _endbox;
      _hbox;
            _label ('Blue layer:'); editblue := _colort (0, 0, $FFFF, $FFFF);
            _label ('Map:'); editbluemap := _smalledit ('1');
            _label ('Radius:'); editblueradius := _smalledit ('0.1');
      _endbox;
      _hbox;
            _label ('Yellow layer:'); edityellow := _colort ($FFFF, $FFFF, 0, $FFFF);
            _label ('Map:'); edityellowmap := _smalledit ('-1');
            _label ('Radius:'); edityellowradius := _smalledit ('0.1');
      _endbox;
      _hbox;
            _label ('Cyan layer:'); editcyan := _colort (0, $FFFF, $FFFF, $FFFF);
            _label ('Map:'); editcyanmap := _smalledit ('-1');
            _label ('Radius:'); editcyanradius := _smalledit ('0.1');
      _endbox;
      _hbox;
            _label ('Purple layer:'); editpurple := _colort ($FFFF, 0, $FFFF, $FFFF);
            _label ('Map:'); editpurplemap := _smalledit ('-1');
            _label ('Radius:'); editpurpleradius := _smalledit ('0.1');
      _endbox;
_endbox;
_endpage;

_page ('PR ','Povray render option');
_vbox;
_expand;
      _hbox;
            _group;
                   _unradiobutton ('No camera');
                   _vbox;
                         togglecamera1 := _unradiobutton ('Camera');
                         togglecamera2 := _radiobutton ('Cameras');
                   _endbox;
                   togglecamera3 := _unradiobutton ('Ortho cameras');
            _endgroup;
      _endbox;
      _hbox;
            _label ('Camera position:');
            show_povray_camera := _combobox;
                                      _item ('Front (-z)');
                                      _item ('Back (z)');
                                      _item ('Left (-x)');
                                      _item ('Right (x)');
                                      _item ('Down (-y)');
                                      _item ('Up (y)');
                                      _item ('Around x');
                                      _item ('Around y');
                                      _item ('Around z');
                                      _item ('Right up (x,y,z)');
                                      _item ('Left down (-x,-y,-z)');
            _endcombobox (0);
      _endbox;
      _separator;
      _group;
            _hbox;
                  togglesky1 := _radiobutton ('Normal Sky');
                  _label ('Color:'); editsky1 := _color ($FFFF, $FFFF, $FFFF);
            _endbox;
            _hbox;
                  togglesky2 := _unradiobutton ('Smooth Sky');
                  _label ('Gradient:'); editsky2 := _color (round(0.14*$FFFF), round(0.14*$FFFF), round(0.56*$FFFF));
                  show_povray_sky := _combobox;
                                      _item ('X-gradient');
                                      _item ('Y-gradient');
                                      _item ('Z-gradient');
                  _endcombobox (1);
            _endbox;
      _endgroup;
      _separator;
      _hbox;
            _group;
                   _unradiobutton ('No lights');
                   _vbox;
                         togglepointlight := _unradiobutton ('Pointlight');
                         togglepointlights := _unradiobutton ('Pointlights');
                   _endbox;
                   _vbox;
                         togglespotlight := _unradiobutton ('Spotlight');
                         togglespotlights := _unradiobutton ('Spotlights');
                   _endbox;
                   _vbox;
                         togglearealights := _radiobutton ('Arealights');
                   _endbox;
             _endgroup;
      _endbox;
      _hbox;
            _label;
            _label ('Color:'); editlight := _color ($FFFF, $FFFF, $FFFF);
            _label;
      _endbox;
_endbox;
_endpage;

_page ('PA ','Povray axes option');
_vbox;
_expand;
      _hbox;
            _label ('Axes:');
            toggleaxisx := _checkbutton ('X-axis');
            toggleaxisy := _checkbutton ('Y-axes');
            toggleaxisz := _checkbutton ('Z-axes');
      _endbox;
      _hbox;
            _vbox;
                  command ('Set','','','','Set min and max dimension',@proc_show_set_dimension_minmax);
            _endbox;
            _vbox;
                  command ('Set min','','','','Set min dimension from actual objects',@proc_show_set_dimension_min);
                  command ('Set max','','','','Set max dimension from actual objects',@proc_show_set_dimension_max);
            _endbox;
            _vbox;
                  _label ('Dimension (min):');
                  _label ('Dimension (max):');
            _endbox;
            _vbox;
                  show_povray_min := _edit ('<-10, -10, -10>');
                  show_povray_max := _edit ('<10, 10, 10>');
            _endbox;
      _endbox;
      _separator;
      _hbox;
            _label;
            toggleaxis := _checkbutton ('Arrows');
            editaxis := _colort (0, 0, 0, $FFFF);
            _label;
      _endbox;
      _separator;
      _hbox;
            _label;
            toggleticks := _checkbutton ('Ticks');
            editticks := _colort (0, 0, 0, $FFFF);
            _label;
      _endbox;
      _hbox;
            _label ('Step:'); show_povray_ticks := _edit ('<1, 1, 1>');
            _label ('Size:'); show_povray_ticks_size := _edit ('<1, 1, 1>');
      _endbox;
      _separator;
      _hbox;
            toggleraster := _tooltip (_uncheckbutton ('Raster'),'Grid/Raster');
            editraster := _colort ($8000, $8000, $8000, $FFFF);
            _label ('Step:'); show_povray_raster := _edit ('<1, 1, 1>');
      _endbox;
_endbox;
_endpage;

